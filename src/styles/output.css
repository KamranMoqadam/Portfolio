/*! tailwindcss v4.0.17 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-md: 12px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    font-feature-settings: initial;
    font-variation-settings: initial;
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    font-feature-settings: initial;
    font-variation-settings: initial;
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .collapse {
    visibility: collapse;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-5 {
    top: calc(var(--spacing) * 5);
  }
  .left-5 {
    left: calc(var(--spacing) * 5);
  }
  .isolate {
    isolation: isolate;
  }
  .z-1000 {
    z-index: 1000;
  }
  .z-1010 {
    z-index: 1010;
  }
  .z-8050 {
    z-index: 8050;
  }
  .z-9998 {
    z-index: 9998;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-6 {
    margin-inline: calc(var(--spacing) * 6);
  }
  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .ml-auto {
    margin-left: auto;
  }
  .\!flex {
    display: flex !important;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .flow-root {
    display: flow-root;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .table {
    display: table;
  }
  .table-caption {
    display: table-caption;
  }
  .table-cell {
    display: table-cell;
  }
  .table-column {
    display: table-column;
  }
  .table-column-group {
    display: table-column-group;
  }
  .table-footer-group {
    display: table-footer-group;
  }
  .table-header-group {
    display: table-header-group;
  }
  .table-row {
    display: table-row;
  }
  .table-row-group {
    display: table-row-group;
  }
  .h-px {
    height: 1px;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1\/4 {
    width: calc(1/4 * 100%);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-3\/5 {
    width: calc(3/5 * 100%);
  }
  .w-4\/5 {
    width: calc(4/5 * 100%);
  }
  .w-11\/12 {
    width: calc(11/12 * 100%);
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-14 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 14) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 14) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-custom-dark {
    background-color: #001020;
  }
  .bg-custom-light {
    background-color: #FFFFFF;
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-14 {
    padding-block: calc(var(--spacing) * 14);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }
  .text-center {
    text-align: center;
  }
  .text-justify {
    text-align: justify;
  }
  .font-ubuntu {
    font-family: Ubuntu, sans-serif;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-all {
    word-break: break-all;
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-custom-dark {
    color: #001020;
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-white {
    color: var(--color-white);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow {
    --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow( 0 1px 1px rgb(0 0 0 / 0.06));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .before\:bg-black {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-black);
    }
  }
  .before\:shadow-batman_black {
    &::before {
      content: var(--tw-content);
      --tw-shadow: 0 0 0 50px var(--tw-shadow-color, rgba(0, 0, 0, 1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .after\:bg-black {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-black);
    }
  }
  .after\:shadow-batman_black {
    &::after {
      content: var(--tw-content);
      --tw-shadow: 0 0 0 50px var(--tw-shadow-color, rgba(0, 0, 0, 1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .hover\:text-blue-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .max-sm\:flex {
    @media (width < 40rem) {
      display: flex;
    }
  }
  .max-sm\:flex-wrap {
    @media (width < 40rem) {
      flex-wrap: wrap;
    }
  }
  .max-sm\:items-center {
    @media (width < 40rem) {
      align-items: center;
    }
  }
  .max-sm\:items-start {
    @media (width < 40rem) {
      align-items: flex-start;
    }
  }
  .max-sm\:justify-center {
    @media (width < 40rem) {
      justify-content: center;
    }
  }
  .max-sm\:px-5 {
    @media (width < 40rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .max-sm\:pt-20 {
    @media (width < 40rem) {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:flex-wrap {
    @media (width >= 40rem) {
      flex-wrap: wrap;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:items-start {
    @media (width >= 40rem) {
      align-items: flex-start;
    }
  }
  .sm\:justify-center {
    @media (width >= 40rem) {
      justify-content: center;
    }
  }
  .sm\:pt-20 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  .sm\:text-xs {
    @media (width >= 40rem) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:flex-wrap {
    @media (width >= 48rem) {
      flex-wrap: wrap;
    }
  }
  .md\:flex-wrap-reverse {
    @media (width >= 48rem) {
      flex-wrap: wrap-reverse;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-center {
    @media (width >= 48rem) {
      justify-content: center;
    }
  }
  .md\:pt-10 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 10);
    }
  }
  .md\:pt-20 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:w-4\/5 {
    @media (width >= 64rem) {
      width: calc(4/5 * 100%);
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .lg\:justify-normal {
    @media (width >= 64rem) {
      justify-content: normal;
    }
  }
  .lg\:justify-start {
    @media (width >= 64rem) {
      justify-content: flex-start;
    }
  }
  .lg\:text-base {
    @media (width >= 64rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .xl\:text-lg {
    @media (width >= 80rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .\32 xl\:text-xl {
    @media (width >= 96rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .dark\:border-white {
    @media (prefers-color-scheme: dark) {
      border-color: var(--color-white);
    }
  }
  .dark\:bg-custom-dark {
    @media (prefers-color-scheme: dark) {
      background-color: #001020;
    }
  }
  .dark\:bg-custom-light {
    @media (prefers-color-scheme: dark) {
      background-color: #FFFFFF;
    }
  }
  .dark\:bg-white {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-white);
    }
  }
  .dark\:text-custom-light {
    @media (prefers-color-scheme: dark) {
      color: #FFFFFF;
    }
  }
  .dark\:text-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-white);
    }
  }
  .dark\:before\:bg-white {
    @media (prefers-color-scheme: dark) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-white);
      }
    }
  }
  .dark\:before\:shadow-batman_white {
    @media (prefers-color-scheme: dark) {
      &::before {
        content: var(--tw-content);
        --tw-shadow: 0 0 0 50px var(--tw-shadow-color, rgba(255, 255, 255, 1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:after\:bg-white {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        background-color: var(--color-white);
      }
    }
  }
  .dark\:after\:shadow-batman_white {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        --tw-shadow: 0 0 0 50px var(--tw-shadow-color, rgba(255, 255, 255, 1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 100;
  font-style: normal;
  font-display: swap;
  src: local('Roboto'), local('Roboto Thin'), url('src/libs/fonts/roboto/Roboto-Thin.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-Thin.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 100;
  font-style: italic;
  font-display: swap;
  src: local('Roboto'), local('Roboto Thin Italic'), url('src/libs/fonts/roboto/Roboto-ThinItalic.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-ThinItalic.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
  font-style: normal;
  font-display: swap;
  src: local('Roboto'), local('Roboto Light'), url('src/libs/fonts/roboto/Roboto-Light.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-Light.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
  font-style: italic;
  font-display: swap;
  src: local('Roboto'), local('Roboto Light Italic'), url('src/libs/fonts/roboto/Roboto-LightItalic.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-LightItalic.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
  font-style: normal;
  font-display: swap;
  src: local('Roboto'), local('Roboto Regular'), url('src/libs/fonts/roboto/Roboto-Regular.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-Regular.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
  font-style: italic;
  font-display: swap;
  src: local('Roboto'), local('Roboto Italic'), url('src/libs/fonts/roboto/Roboto-Italic.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-RegularItalic.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 500;
  font-style: normal;
  font-display: swap;
  src: local('Roboto'), local('Roboto Medium'), url('src/libs/fonts/roboto/Roboto-Medium.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-Medium.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 500;
  font-style: italic;
  font-display: swap;
  src: local('Roboto'), local('Roboto Medium Italic'), url('src/libs/fonts/roboto/Roboto-MediumItalic.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-MediumItalic.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 700;
  font-style: normal;
  font-display: swap;
  src: local('Roboto'), local('Roboto Bold'), url('src/libs/fonts/roboto/Roboto-Bold.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-Bold.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 700;
  font-style: italic;
  font-display: swap;
  src: local('Roboto'), local('Roboto Bold Italic'), url('src/libs/fonts/roboto/Roboto-BoldItalic.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-BoldItalic.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  font-style: normal;
  font-display: swap;
  src: local('Roboto'), local('Roboto Black'), url('src/libs/fonts/roboto/Roboto-Black.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-Black.ttf') format('truetype');
}
@font-face {
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  font-style: italic;
  font-display: swap;
  src: local('Roboto'), local('Roboto Black Italic'), url('src/libs/fonts/roboto/Roboto-BlackItalic.woff') format('woff'), url('src/libs/fonts/roboto/Roboto-BlackItalic.ttf') format('truetype');
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 300;
  font-style: normal;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Light'), url('src/libs/fonts/Ubuntu/Ubuntu-L.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-Light.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 400;
  font-style: normal;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Regular'), url('src/libs/fonts/Ubuntu/Ubuntu-R.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-Regular.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 500;
  font-style: normal;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Medium'), url('src/libs/fonts/Ubuntu/Ubuntu-M.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-Medium.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 700;
  font-style: normal;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Bold'), url('src/libs/fonts/Ubuntu/Ubuntu-B.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-Bold.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 300;
  font-style: italic;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Light Italic'), url('src/libs/fonts/Ubuntu/Ubuntu-LI.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-LightItalic.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 400;
  font-style: italic;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Italic'), url('src/libs/fonts/Ubuntu/Ubuntu-RI.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-Italic.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 500;
  font-style: italic;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Medium Italic'), url('src/libs/fonts/Ubuntu/Ubuntu-MI.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-MediumItalic.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu", sans-serif;
  font-weight: 700;
  font-style: italic;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Bold Italic'), url('src/libs/fonts/Ubuntu/Ubuntu-BI.woff') format('woff'), url("src/libs/fonts/Ubuntu/Ubuntu-BoldItalic.ttf") format("truetype");
}
@font-face {
  font-family: "Ubuntu Condensed", sans-serif;
  font-weight: 400;
  font-style: normal;
  font-display: swap;
  src: local('Ubuntu'), local('Ubuntu Condensed Regular'), url('src/libs/fonts/Ubuntu/Ubuntu-C.woff') format('woff'), url("src/libs/fonts/Ubuntu/UbuntuCondensed-Regular.ttf") format("truetype");
}
:root {
  --cursor-size: 40px;
  --cursor2-size: 10px;
  --grid-line-color: rgba(0, 78, 218, 0.12);
}
.cursor, .cursor2 {
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: transform 150ms ease-out, border-color 150ms ease-out;
}
.cursor {
  width: var(--cursor-size);
  height: var(--cursor-size);
  background: transparent;
}
.cursor2 {
  width: var(--cursor2-size);
  height: var(--cursor2-size);
  transition: width 0.3s ease-out, height 0.3s ease-out, opacity 0.3s ease-out;
}
.cursorinnerhover {
  width: var(--cursor-size);
  height: var(--cursor-size);
  opacity: 0.3;
}
.grid-bg {
  position: relative;
  width: 100%;
  height: 100vh;
}
.grid-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to right, rgba(0, 78, 218, 0.12) 1px, transparent 1px), linear-gradient(to bottom, rgba(0, 78, 218, 0.12) 1px, transparent 1px);
  background-size: 25px 25px;
  mask-image: linear-gradient(to bottom right, rgba(255, 255, 255, 1) 30%, rgba(255, 255, 255, 0) 50%);
  -webkit-mask-image: linear-gradient(to bottom right, rgba(255, 255, 255, 1) 30%, rgba(255, 255, 255, 0) 50%);
}
.loader {
  width: 100px;
  height: 45px;
  position: relative;
}
.loader:before, .loader:after {
  content: "";
  position: absolute;
  inset: 0;
  clip-path: polygon(-50px -20px, 10% -12px, 20% 0, calc(50% - 15px) 0, calc(50% - 10px) -20px, calc(50% - 8px) -15px, calc(50% + 8px) -15px, calc(50% + 10px) -20px, calc(50% + 15px) 0, 80% 0, 90% -12px, calc(100% + 50px) -20px, 100% 80%, calc(100% + 10px) calc(100% + 10px), 60% 100%, 50% calc(100% + 15px), 40% 100%, -10px calc(100% + 10px), 0 80%);
}
.loader:after {
  animation: l9 1s infinite;
  transform: perspective(300px) translateZ(0px);
}
@keyframes l9 {
  to {
    transform: perspective(300px) translateZ(100px);
    opacity: 0;
  }
}
.blob-container {
  position: relative;
  width: 250px;
  height: 250px;
}
.blob-border {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  background: rgba(255, 255, 255, 0.2);
  filter: blur(10px);
  z-index: -1;
  animation: blob 6s infinite ease-in-out;
}
.blob {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  overflow: hidden;
  position: relative;
  animation: blob 4s infinite ease-in-out;
}
.blob img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
@keyframes blob {
  0% {
    border-radius: 50% 40% 60% 40% / 40% 50% 30% 60%;
  }
  50% {
    border-radius: 40% 60% 50% 60% / 60% 40% 50% 40%;
  }
  100% {
    border-radius: 50% 40% 60% 40% / 40% 50% 30% 60%;
  }
}
.typing-text::after {
  content: '|';
  animation: blink 1s infinite;
  color: #3392EF;
}
@keyframes blink {
  50% {
    opacity: 0;
  }
}
@layer base {
  * {
    cursor: none;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
